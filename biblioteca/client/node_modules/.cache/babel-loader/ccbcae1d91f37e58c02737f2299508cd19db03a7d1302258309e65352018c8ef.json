{"ast":null,"code":"import axios from 'axios';\nconst baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL,\n  timeout: 7000\n});\n\n// Función para construir query parameters\nconst buildQueryParams = params => {\n  const queryString = new URLSearchParams();\n  Object.keys(params).forEach(key => {\n    if (params[key] !== null && params[key] !== undefined && params[key] !== '') {\n      queryString.append(key, params[key]);\n    }\n  });\n  return queryString.toString();\n};\nexport const getLibros = (sortBy = 'id', sortOrder = 'ASC', filterBy = null, filterValue = null) => {\n  const params = {\n    sortBy,\n    sortOrder\n  };\n  if (filterBy && filterValue) {\n    params.filterBy = filterBy;\n    params.filterValue = filterValue;\n  }\n  const queryString = buildQueryParams(params);\n  return api.get(`/libros${queryString ? `?${queryString}` : ''}`);\n};\nexport const createLibro = data => api.post('/libros', data);\nexport const updateLibro = (id, data) => api.put(`/libros/${id}`, data);\nexport const deleteLibro = id => api.delete(`/libros/${id}`);\nexport const searchLibros = titulo => api.get(`/libros/buscar?titulo=${encodeURIComponent(titulo)}`);\n\n// Nuevas funciones de filtrado\nexport const filterByGenre = genero => api.get(`/libros/filtrar/genero/${encodeURIComponent(genero)}`);\nexport const filterByAuthor = autor => api.get(`/libros/filtrar/autor/${encodeURIComponent(autor)}`);\nexport const filterByStatus = estado => api.get(`/libros/filtrar/estado/${encodeURIComponent(estado)}`);\n\n// Funciones para obtener listas\nexport const getGenres = () => api.get('/libros/generos');\nexport const getAuthors = () => api.get('/libros/autores');\nexport default api;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_URL","api","create","timeout","buildQueryParams","params","queryString","URLSearchParams","Object","keys","forEach","key","undefined","append","toString","getLibros","sortBy","sortOrder","filterBy","filterValue","get","createLibro","data","post","updateLibro","id","put","deleteLibro","delete","searchLibros","titulo","encodeURIComponent","filterByGenre","genero","filterByAuthor","autor","filterByStatus","estado","getGenres","getAuthors"],"sources":["E:/Universidad/INTELIGENCIA DE NEGOCIOS/biblioteca/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nconst baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8080/api';\nconst api = axios.create({ baseURL, timeout: 7000 });\n\n// Función para construir query parameters\nconst buildQueryParams = (params) => {\n  const queryString = new URLSearchParams();\n  Object.keys(params).forEach(key => {\n    if (params[key] !== null && params[key] !== undefined && params[key] !== '') {\n      queryString.append(key, params[key]);\n    }\n  });\n  return queryString.toString();\n};\n\nexport const getLibros = (sortBy = 'id', sortOrder = 'ASC', filterBy = null, filterValue = null) => {\n  const params = { sortBy, sortOrder };\n  if (filterBy && filterValue) {\n    params.filterBy = filterBy;\n    params.filterValue = filterValue;\n  }\n  const queryString = buildQueryParams(params);\n  return api.get(`/libros${queryString ? `?${queryString}` : ''}`);\n};\n\nexport const createLibro = (data) => api.post('/libros', data);\nexport const updateLibro = (id, data) => api.put(`/libros/${id}`, data);\nexport const deleteLibro = (id) => api.delete(`/libros/${id}`);\nexport const searchLibros = (titulo) => api.get(`/libros/buscar?titulo=${encodeURIComponent(titulo)}`);\n\n// Nuevas funciones de filtrado\nexport const filterByGenre = (genero) => api.get(`/libros/filtrar/genero/${encodeURIComponent(genero)}`);\nexport const filterByAuthor = (autor) => api.get(`/libros/filtrar/autor/${encodeURIComponent(autor)}`);\nexport const filterByStatus = (estado) => api.get(`/libros/filtrar/estado/${encodeURIComponent(estado)}`);\n\n// Funciones para obtener listas\nexport const getGenres = () => api.get('/libros/generos');\nexport const getAuthors = () => api.get('/libros/autores');\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAC5E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EAAEL,OAAO;EAAEM,OAAO,EAAE;AAAK,CAAC,CAAC;;AAEpD;AACA,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EACnC,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC,CAAC;EACzCC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;IACjC,IAAIN,MAAM,CAACM,GAAG,CAAC,KAAK,IAAI,IAAIN,MAAM,CAACM,GAAG,CAAC,KAAKC,SAAS,IAAIP,MAAM,CAACM,GAAG,CAAC,KAAK,EAAE,EAAE;MAC3EL,WAAW,CAACO,MAAM,CAACF,GAAG,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;IACtC;EACF,CAAC,CAAC;EACF,OAAOL,WAAW,CAACQ,QAAQ,CAAC,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACC,MAAM,GAAG,IAAI,EAAEC,SAAS,GAAG,KAAK,EAAEC,QAAQ,GAAG,IAAI,EAAEC,WAAW,GAAG,IAAI,KAAK;EAClG,MAAMd,MAAM,GAAG;IAAEW,MAAM;IAAEC;EAAU,CAAC;EACpC,IAAIC,QAAQ,IAAIC,WAAW,EAAE;IAC3Bd,MAAM,CAACa,QAAQ,GAAGA,QAAQ;IAC1Bb,MAAM,CAACc,WAAW,GAAGA,WAAW;EAClC;EACA,MAAMb,WAAW,GAAGF,gBAAgB,CAACC,MAAM,CAAC;EAC5C,OAAOJ,GAAG,CAACmB,GAAG,CAAC,UAAUd,WAAW,GAAG,IAAIA,WAAW,EAAE,GAAG,EAAE,EAAE,CAAC;AAClE,CAAC;AAED,OAAO,MAAMe,WAAW,GAAIC,IAAI,IAAKrB,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAED,IAAI,CAAC;AAC9D,OAAO,MAAME,WAAW,GAAGA,CAACC,EAAE,EAAEH,IAAI,KAAKrB,GAAG,CAACyB,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEH,IAAI,CAAC;AACvE,OAAO,MAAMK,WAAW,GAAIF,EAAE,IAAKxB,GAAG,CAAC2B,MAAM,CAAC,WAAWH,EAAE,EAAE,CAAC;AAC9D,OAAO,MAAMI,YAAY,GAAIC,MAAM,IAAK7B,GAAG,CAACmB,GAAG,CAAC,yBAAyBW,kBAAkB,CAACD,MAAM,CAAC,EAAE,CAAC;;AAEtG;AACA,OAAO,MAAME,aAAa,GAAIC,MAAM,IAAKhC,GAAG,CAACmB,GAAG,CAAC,0BAA0BW,kBAAkB,CAACE,MAAM,CAAC,EAAE,CAAC;AACxG,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAKlC,GAAG,CAACmB,GAAG,CAAC,yBAAyBW,kBAAkB,CAACI,KAAK,CAAC,EAAE,CAAC;AACtG,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAKpC,GAAG,CAACmB,GAAG,CAAC,0BAA0BW,kBAAkB,CAACM,MAAM,CAAC,EAAE,CAAC;;AAEzG;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAMrC,GAAG,CAACmB,GAAG,CAAC,iBAAiB,CAAC;AACzD,OAAO,MAAMmB,UAAU,GAAGA,CAAA,KAAMtC,GAAG,CAACmB,GAAG,CAAC,iBAAiB,CAAC;AAE1D,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}